(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{698:function(n,t,s){"use strict";s.r(t);var a=s(5),e=Object(a.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("二叉平衡树，Splay")]),n._v(" "),s("h1",{attrs:{id:"d-辉夜大小姐希望完成她的愿望"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#d-辉夜大小姐希望完成她的愿望"}},[n._v("#")]),n._v(" D. 辉夜大小姐希望完成她的愿望")]),n._v(" "),s("p",[s("strong",[n._v("题意")]),n._v("：维护一个数据结构，支持：")]),n._v(" "),s("ol",[s("li",[n._v("插入数x")]),n._v(" "),s("li",[n._v("删除（一个）数x")]),n._v(" "),s("li",[n._v("查询x的排名")]),n._v(" "),s("li",[n._v("查询排名为x的数")]),n._v(" "),s("li",[n._v("求小于x，且最大的数（或没有）")]),n._v(" "),s("li",[n._v("求大于x，且最小的数（或没有）")])]),n._v(" "),s("hr"),n._v(" "),s("h3",{attrs:{id:"splay维护二叉查找树-二叉平衡树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splay维护二叉查找树-二叉平衡树"}},[n._v("#")]),n._v(" Splay维护二叉查找树（二叉平衡树）")]),n._v(" "),s("p",[n._v("**二叉查找树 **满足性质：左子树的任意节点的值<根节点的值<右节点任意节点的值。其上每个节点需要维护：改节点的父亲、改节点的权值、改节点权值出现的次数、左右儿子的编号、以改节点为根的子树的大小。")]),n._v(" "),s("p",[n._v("普通的二叉查找树在不断的插入数据后，可能会退化成链，也就是左子树的大小于右子树的大小严重不搭。在这种左右不平衡的情况下二叉查找树的意义就没了。所以出现了用Splay做二叉平衡树。二叉平衡树与普通的查找树，区别在于二叉平衡树对于每一个节点x，其左右子树的深度差<=1。改性质通过不断将某节点旋转到根节点做到。")]),n._v(" "),s("p",[s("strong",[n._v("Splay旋转操作")])]),n._v(" "),s("p",[n._v("对于要旋转到根节点的x（其父为y)，首先要判断x是y的左儿子还是右儿子，以确定旋转方向。另外，还需分几种具体情况。")]),n._v(" "),s("blockquote",[s("p",[n._v("搬了OI wiki上的图")])]),n._v(" "),s("ul",[s("li",[s("p",[n._v("若"),s("strong",[n._v("y")]),n._v("是根节点，直接旋"),s("strong",[n._v("x")]),n._v("就行。如下图，将"),s("strong",[n._v("x")]),n._v("改为是"),s("strong",[n._v("y")]),n._v("的父亲，"),s("strong",[n._v("x")]),n._v("的右儿子改为"),s("strong",[n._v("y")]),n._v("。")]),n._v(" "),s("p",[n._v("这里如果"),s("strong",[n._v("x")]),n._v("有右儿子的话，要把"),s("strong",[n._v("x")]),n._v("的右儿子变成"),s("strong",[n._v("y")]),n._v("的左儿子")])])]),n._v(" "),s("p",[s("img",{attrs:{src:"https://oi-wiki.org/ds/images/splay-rotate1.svg",alt:"图 1"}})]),n._v(" "),s("ul",[s("li",[s("p",[n._v("若"),s("strong",[n._v("y")]),n._v("不是根节点，需要判断一下"),s("strong",[n._v("x")]),n._v("和"),s("strong",[n._v("y")]),n._v("的所属儿子类型。设"),s("strong",[n._v("y")]),n._v("的父亲是"),s("strong",[n._v("z")]),n._v("，则我们需要判断"),s("strong",[n._v("x")]),n._v("作为"),s("strong",[n._v("y")]),n._v("的儿子类型和"),s("strong",[n._v("y")]),n._v("作为"),s("strong",[n._v("z")]),n._v("的儿子类型是否相同。")]),n._v(" "),s("ul",[s("li",[s("p",[n._v("若相同，先旋转"),s("strong",[n._v("y")]),n._v("再旋转"),s("strong",[n._v("x")]),n._v("。下图是先将"),s("strong",[n._v("y")]),n._v("右旋再将"),s("strong",[n._v("x")]),n._v("右旋得到。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://oi-wiki.org/ds/images/splay-rotate3.svg",alt:"图 3"}})])]),n._v(" "),s("li",[s("p",[n._v("若不相同，连续旋转两次"),s("strong",[n._v("x")]),n._v("。下图是先将"),s("strong",[n._v("x")]),n._v("左旋再右旋得到。")])])])])]),n._v(" "),s("p",[s("img",{attrs:{src:"https://oi-wiki.org/ds/images/splay-rotate5.svg",alt:"图 5"}})]),n._v(" "),s("p",[n._v("接下来，对于插入操作，再插入数据后要把插入的那个点splay到根节点；对于删除操作，需要注意彻底删除某节点时要连接一波，不然树就断了；对于查询x的排名和查询排名为x的数，利用节点维护的子树size信息可以易得；对于查询x前驱，先把x插入树里，将x旋转到根节点，前驱就是根节点左子树里最靠右的那个点，查完后把x删除；后驱同理。")]),n._v(" "),s("hr"),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v('#include <bits/stdc++.h>\n#include <unordered_map>\nusing namespace std;\n#define si(a) scanf("%d",&a)\n#define sii(a,b) scanf("%d%d",&a,&b)\n#define siii(a,b,c) scanf("%d%d%d",&a,&b,&c)\n#define fl float\n#define ll long long int\n#define ull unsigned long long int\nint gcd(int a, int b) { return a == 0 ? b : gcd(b % a, a); }\nint jd(int a) { return a < 0 ? (a * -1) : a; }\nstruct NODE {//根，它爸，它的权值，该权值出现次数，以它为根的树大小，左儿子sto，右儿子orz\n\tint fa, value, cut, size, l, r;\n}node[200010];\nint n,root, tot;//tot总节点个数\nint ahhhh;\nvoid update(int x) { node[x].size = node[node[x].l].size + node[node[x].r].size +node[x].cut; }//更新x的大小\nint l_or_r(int x) { return node[node[x].fa].l == x; }//返回1则为左儿子，否则为右儿子\nvoid kill(int x) { node[x].fa = node[x].value = node[x].cut = node[x].size = node[x].l = node[x].r = 0; }\nvoid op1_insert(int k);\nvoid op2_delect(int k);\nint op3_askrank(int k);\nvoid op4_asknum(int k);\nvoid op5_beforemax(int k);\nvoid op6_aftermin(int k);\nvoid rotate(int x, int type) {//type为0->左旋，否则为右旋\n\tif (!type) {//左\n\t\tint father = node[x].fa, gfather = node[father].fa;\n\t\tnode[father].r = node[x].l;\n\t\tif (node[x].l)\n\t\t\tnode[node[x].l].fa = father;\n\t\tnode[x].l = father;\n\t\tnode[father].fa = x;\n\t\tnode[x].fa = gfather;\n\t\tif (gfather) {\n\t\t\tif (node[gfather].r == father)\n\t\t\t\tnode[gfather].r = x;\n\t\t\telse\n\t\t\t\tnode[gfather].l = x;\n\t\t}\n\t\tupdate(father);\n\t\tupdate(x);\n\t}\n\telse {//右\n\t\tint father = node[x].fa, gfather = node[father].fa;\n\t\tnode[father].l = node[x].r;//它爸的左儿子指向x的右儿子\n\t\tif (node[x].r)\n\t\t\tnode[node[x].r].fa = father;//x右儿子的父亲指向x的爸\n\t\tnode[x].r = father;//x的右儿子更改为(x的爸)\n\t\tnode[father].fa = x;//(x的爸)的父亲指向x\n\t\tnode[x].fa = gfather;\n\t\tif (gfather) {//换祖父的儿子\n\t\t\tif (node[gfather].r == father)\n\t\t\t\tnode[gfather].r = x;\n\t\t\telse\n\t\t\t\tnode[gfather].l = x;\n\t\t}\n\t\tupdate(father);//更新x原来的爸（现在是右儿子）的size\n\t\tupdate(x);//更新x的size\n\t}\n}\nvoid splay(int x) {\n\tfor (int father = node[x].fa; father; father = node[x].fa) {\n\t\tif (node[father].fa) {//x的爸不是根节点\n\t\t\tint ff = l_or_r(father), xf = l_or_r(x);\n\t\t\tif (ff != xf) //类型不一，转x\n\t\t\t\trotate(x, xf);\n\t\t\telse //类型一样，转father\n\t\t\t\trotate(father, ff);\n\t\t}\n\t\trotate(x, l_or_r(x));\n\t}\n\troot = x;\n}\nvoid cao(int x) {//把值为x的节点给splay到根处\n\tint now = root;\n\twhile (1) {\n\t\tif (x > node[now].value)\n\t\t\tnow = node[now].r;\n\t\telse if (x < node[now].value)\n\t\t\tnow = node[now].l;\n\t\telse {\n\t\t\tsplay(now);\n\t\t\tbreak;\n\t\t}\n\t}\n}\nvoid op1_insert(int k) {//插入\n\tif (!root) {//没根\n\t\ttot++;\n\t\tnode[tot].value = k, node[tot].cut++;\n\t\troot = tot;\n\t\tupdate(root);\n\t}\n\telse {\n\t\tint now = root, father = 0;\n\t\twhile (1) {\n\t\t\tif (node[now].value != k) {//权值不一样，开开开\n\t\t\t\tfather = now;\n\t\t\t\tnow = node[now].value < k ? node[now].r : node[now].l;\n\t\t\t\tif (!now) {//到底嘞\n\t\t\t\t\tnode[++tot].value = k, node[tot].cut++, node[tot].fa = father;\n\t\t\t\t\tif (node[father].value < k)\n\t\t\t\t\t\tnode[father].r = tot;\n\t\t\t\t\telse\n\t\t\t\t\t\tnode[father].l = tot;\n\t\t\t\t\tupdate(tot), update(father);\n\t\t\t\t\tsplay(tot);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {//权值一样直接操作\n\t\t\t\tnode[now].cut++;\n\t\t\t\tupdate(now), update(father);\n\t\t\t\tsplay(now);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n}\nvoid op2_delect(int k) {//删除\n\tint now = root;\n\top3_askrank(k);\n\tif (node[root].cut > 1) {\n\t\tnode[root].cut--;\n\t\tupdate(root);\n\t\treturn;\n\t}\n\t//删了就没根了\n\tif (!node[root].l && !node[root].r) {//彻底没了\n\t\tkill(root);\n\t\troot = 0;\n\t\treturn;\n\t}\n\tif (!node[root].l) {//没左边，升右\n\t\tint tem = root;\n\t\troot = node[root].r;\n\t\tnode[root].fa = 0;\n\t\tkill(tem);\n\t\treturn;\n\t}\n\telse if (!node[root].r) {\n\t\tint tem = root;\n\t\troot = node[root].l;\n\t\tnode[root].fa = 0;\n\t\tkill(tem);\n\t\treturn;\n\t}\n\tint rot = root, tem = node[root].l;\n\tif (tem) {\n\t\twhile (node[tem].r)\n\t\t\ttem = node[tem].r;\n\t\tsplay(tem);\n\t}\n\tnode[node[rot].r].fa = tem;\n\tnode[tem].r = node[rot].r;\n\tkill(rot);\n\tupdate(root);\n}\nint op3_askrank(int k) {//查询排名\n\tint now = root, sum = 0;\n\twhile (now) {\n\t\tif ( k < node[now].value)\n\t\t\tnow = node[now].l;\n\t\telse if(k>node[now].value){\n\t\t\tsum += node[node[now].l].size + node[now].cut;\n\t\t\tnow = node[now].r;\n\t\t}\n\t\telse {\n\t\t\tsum += node[node[now].l].size;\n\t\t\tsplay(now);\n\t\t\treturn sum + 1;\n\t\t}\n\t}\n\treturn ahhhh + 1;\n}\nvoid op4_asknum(int k) {//查询数\n\tint now = root;\n\twhile (1) {\n\t\tif (node[now].l && k <= node[node[now].l].size)\n\t\t\tnow = node[now].l;\n\t\telse {\n\t\t\tk -= node[now].cut + node[node[now].l].size;\n\t\t\tif (k <= 0) {\n\t\t\t\tsplay(now);\n\t\t\t\tprintf("%d\\n", node[now].value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tnow = node[now].r;\n\t\t}\n\t}\n}\nvoid op5_beforemax(int k) {//查询前驱\n\top1_insert(k);\n\tint now = node[root].l;\n\tif (!now)\n\t\tputs("NOT FOUND");\n\telse {\n\t\twhile (node[now].r)\n\t\t\tnow = node[now].r;\n\t\tsplay(now);\n\t\tprintf("%d\\n", node[now].value);\n\t}\n\top2_delect(k);\n}\nvoid op6_aftermin(int k) {//查询后驱\n\top1_insert(k);\n\tint now = node[root].r;\n\tif (!now) \n\t\tputs("NOT FOUND");\n\telse {\n\t\twhile (node[now].l)\n\t\t\tnow = node[now].l;\n\t\tsplay(now);\n\t\tprintf("%d\\n", node[now].value);\n\t}\n\top2_delect(k);\n}\nvoid solve() {\n\tsi(n);\n\tfor (int i = 1; i <= n; i++) {\n\t\tint op,k ;\n\t\tsii(op,k);\n\t\tswitch (op) {\n\t\tcase 1: \n\t\t\tahhhh++;\n\t\t\top1_insert(k);\n\t\t\tbreak;\n\t\tcase 2: \n\t\t\tahhhh--;\n\t\t\top2_delect(k); \n\t\t\tbreak;\n\t\tcase 3:\n\t\t\tprintf("%d\\n", op3_askrank(k));\n\t\t\tbreak;\n\t\tcase 4:\n\t\t\top4_asknum(k);\n\t\t\tbreak;\n\t\tcase 5:\n\t\t\top5_beforemax(k);\n\t\t\tbreak;\n\t\tcase 6:\n\t\t\top6_aftermin(k);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t\t}\n\t}\n}\nint main() {\n\tint t;\n\t/*si(t);\n\twhile (t--)*/\n\tsolve();\n\treturn 0;\n}\n')])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br"),s("span",{staticClass:"line-number"},[n._v("35")]),s("br"),s("span",{staticClass:"line-number"},[n._v("36")]),s("br"),s("span",{staticClass:"line-number"},[n._v("37")]),s("br"),s("span",{staticClass:"line-number"},[n._v("38")]),s("br"),s("span",{staticClass:"line-number"},[n._v("39")]),s("br"),s("span",{staticClass:"line-number"},[n._v("40")]),s("br"),s("span",{staticClass:"line-number"},[n._v("41")]),s("br"),s("span",{staticClass:"line-number"},[n._v("42")]),s("br"),s("span",{staticClass:"line-number"},[n._v("43")]),s("br"),s("span",{staticClass:"line-number"},[n._v("44")]),s("br"),s("span",{staticClass:"line-number"},[n._v("45")]),s("br"),s("span",{staticClass:"line-number"},[n._v("46")]),s("br"),s("span",{staticClass:"line-number"},[n._v("47")]),s("br"),s("span",{staticClass:"line-number"},[n._v("48")]),s("br"),s("span",{staticClass:"line-number"},[n._v("49")]),s("br"),s("span",{staticClass:"line-number"},[n._v("50")]),s("br"),s("span",{staticClass:"line-number"},[n._v("51")]),s("br"),s("span",{staticClass:"line-number"},[n._v("52")]),s("br"),s("span",{staticClass:"line-number"},[n._v("53")]),s("br"),s("span",{staticClass:"line-number"},[n._v("54")]),s("br"),s("span",{staticClass:"line-number"},[n._v("55")]),s("br"),s("span",{staticClass:"line-number"},[n._v("56")]),s("br"),s("span",{staticClass:"line-number"},[n._v("57")]),s("br"),s("span",{staticClass:"line-number"},[n._v("58")]),s("br"),s("span",{staticClass:"line-number"},[n._v("59")]),s("br"),s("span",{staticClass:"line-number"},[n._v("60")]),s("br"),s("span",{staticClass:"line-number"},[n._v("61")]),s("br"),s("span",{staticClass:"line-number"},[n._v("62")]),s("br"),s("span",{staticClass:"line-number"},[n._v("63")]),s("br"),s("span",{staticClass:"line-number"},[n._v("64")]),s("br"),s("span",{staticClass:"line-number"},[n._v("65")]),s("br"),s("span",{staticClass:"line-number"},[n._v("66")]),s("br"),s("span",{staticClass:"line-number"},[n._v("67")]),s("br"),s("span",{staticClass:"line-number"},[n._v("68")]),s("br"),s("span",{staticClass:"line-number"},[n._v("69")]),s("br"),s("span",{staticClass:"line-number"},[n._v("70")]),s("br"),s("span",{staticClass:"line-number"},[n._v("71")]),s("br"),s("span",{staticClass:"line-number"},[n._v("72")]),s("br"),s("span",{staticClass:"line-number"},[n._v("73")]),s("br"),s("span",{staticClass:"line-number"},[n._v("74")]),s("br"),s("span",{staticClass:"line-number"},[n._v("75")]),s("br"),s("span",{staticClass:"line-number"},[n._v("76")]),s("br"),s("span",{staticClass:"line-number"},[n._v("77")]),s("br"),s("span",{staticClass:"line-number"},[n._v("78")]),s("br"),s("span",{staticClass:"line-number"},[n._v("79")]),s("br"),s("span",{staticClass:"line-number"},[n._v("80")]),s("br"),s("span",{staticClass:"line-number"},[n._v("81")]),s("br"),s("span",{staticClass:"line-number"},[n._v("82")]),s("br"),s("span",{staticClass:"line-number"},[n._v("83")]),s("br"),s("span",{staticClass:"line-number"},[n._v("84")]),s("br"),s("span",{staticClass:"line-number"},[n._v("85")]),s("br"),s("span",{staticClass:"line-number"},[n._v("86")]),s("br"),s("span",{staticClass:"line-number"},[n._v("87")]),s("br"),s("span",{staticClass:"line-number"},[n._v("88")]),s("br"),s("span",{staticClass:"line-number"},[n._v("89")]),s("br"),s("span",{staticClass:"line-number"},[n._v("90")]),s("br"),s("span",{staticClass:"line-number"},[n._v("91")]),s("br"),s("span",{staticClass:"line-number"},[n._v("92")]),s("br"),s("span",{staticClass:"line-number"},[n._v("93")]),s("br"),s("span",{staticClass:"line-number"},[n._v("94")]),s("br"),s("span",{staticClass:"line-number"},[n._v("95")]),s("br"),s("span",{staticClass:"line-number"},[n._v("96")]),s("br"),s("span",{staticClass:"line-number"},[n._v("97")]),s("br"),s("span",{staticClass:"line-number"},[n._v("98")]),s("br"),s("span",{staticClass:"line-number"},[n._v("99")]),s("br"),s("span",{staticClass:"line-number"},[n._v("100")]),s("br"),s("span",{staticClass:"line-number"},[n._v("101")]),s("br"),s("span",{staticClass:"line-number"},[n._v("102")]),s("br"),s("span",{staticClass:"line-number"},[n._v("103")]),s("br"),s("span",{staticClass:"line-number"},[n._v("104")]),s("br"),s("span",{staticClass:"line-number"},[n._v("105")]),s("br"),s("span",{staticClass:"line-number"},[n._v("106")]),s("br"),s("span",{staticClass:"line-number"},[n._v("107")]),s("br"),s("span",{staticClass:"line-number"},[n._v("108")]),s("br"),s("span",{staticClass:"line-number"},[n._v("109")]),s("br"),s("span",{staticClass:"line-number"},[n._v("110")]),s("br"),s("span",{staticClass:"line-number"},[n._v("111")]),s("br"),s("span",{staticClass:"line-number"},[n._v("112")]),s("br"),s("span",{staticClass:"line-number"},[n._v("113")]),s("br"),s("span",{staticClass:"line-number"},[n._v("114")]),s("br"),s("span",{staticClass:"line-number"},[n._v("115")]),s("br"),s("span",{staticClass:"line-number"},[n._v("116")]),s("br"),s("span",{staticClass:"line-number"},[n._v("117")]),s("br"),s("span",{staticClass:"line-number"},[n._v("118")]),s("br"),s("span",{staticClass:"line-number"},[n._v("119")]),s("br"),s("span",{staticClass:"line-number"},[n._v("120")]),s("br"),s("span",{staticClass:"line-number"},[n._v("121")]),s("br"),s("span",{staticClass:"line-number"},[n._v("122")]),s("br"),s("span",{staticClass:"line-number"},[n._v("123")]),s("br"),s("span",{staticClass:"line-number"},[n._v("124")]),s("br"),s("span",{staticClass:"line-number"},[n._v("125")]),s("br"),s("span",{staticClass:"line-number"},[n._v("126")]),s("br"),s("span",{staticClass:"line-number"},[n._v("127")]),s("br"),s("span",{staticClass:"line-number"},[n._v("128")]),s("br"),s("span",{staticClass:"line-number"},[n._v("129")]),s("br"),s("span",{staticClass:"line-number"},[n._v("130")]),s("br"),s("span",{staticClass:"line-number"},[n._v("131")]),s("br"),s("span",{staticClass:"line-number"},[n._v("132")]),s("br"),s("span",{staticClass:"line-number"},[n._v("133")]),s("br"),s("span",{staticClass:"line-number"},[n._v("134")]),s("br"),s("span",{staticClass:"line-number"},[n._v("135")]),s("br"),s("span",{staticClass:"line-number"},[n._v("136")]),s("br"),s("span",{staticClass:"line-number"},[n._v("137")]),s("br"),s("span",{staticClass:"line-number"},[n._v("138")]),s("br"),s("span",{staticClass:"line-number"},[n._v("139")]),s("br"),s("span",{staticClass:"line-number"},[n._v("140")]),s("br"),s("span",{staticClass:"line-number"},[n._v("141")]),s("br"),s("span",{staticClass:"line-number"},[n._v("142")]),s("br"),s("span",{staticClass:"line-number"},[n._v("143")]),s("br"),s("span",{staticClass:"line-number"},[n._v("144")]),s("br"),s("span",{staticClass:"line-number"},[n._v("145")]),s("br"),s("span",{staticClass:"line-number"},[n._v("146")]),s("br"),s("span",{staticClass:"line-number"},[n._v("147")]),s("br"),s("span",{staticClass:"line-number"},[n._v("148")]),s("br"),s("span",{staticClass:"line-number"},[n._v("149")]),s("br"),s("span",{staticClass:"line-number"},[n._v("150")]),s("br"),s("span",{staticClass:"line-number"},[n._v("151")]),s("br"),s("span",{staticClass:"line-number"},[n._v("152")]),s("br"),s("span",{staticClass:"line-number"},[n._v("153")]),s("br"),s("span",{staticClass:"line-number"},[n._v("154")]),s("br"),s("span",{staticClass:"line-number"},[n._v("155")]),s("br"),s("span",{staticClass:"line-number"},[n._v("156")]),s("br"),s("span",{staticClass:"line-number"},[n._v("157")]),s("br"),s("span",{staticClass:"line-number"},[n._v("158")]),s("br"),s("span",{staticClass:"line-number"},[n._v("159")]),s("br"),s("span",{staticClass:"line-number"},[n._v("160")]),s("br"),s("span",{staticClass:"line-number"},[n._v("161")]),s("br"),s("span",{staticClass:"line-number"},[n._v("162")]),s("br"),s("span",{staticClass:"line-number"},[n._v("163")]),s("br"),s("span",{staticClass:"line-number"},[n._v("164")]),s("br"),s("span",{staticClass:"line-number"},[n._v("165")]),s("br"),s("span",{staticClass:"line-number"},[n._v("166")]),s("br"),s("span",{staticClass:"line-number"},[n._v("167")]),s("br"),s("span",{staticClass:"line-number"},[n._v("168")]),s("br"),s("span",{staticClass:"line-number"},[n._v("169")]),s("br"),s("span",{staticClass:"line-number"},[n._v("170")]),s("br"),s("span",{staticClass:"line-number"},[n._v("171")]),s("br"),s("span",{staticClass:"line-number"},[n._v("172")]),s("br"),s("span",{staticClass:"line-number"},[n._v("173")]),s("br"),s("span",{staticClass:"line-number"},[n._v("174")]),s("br"),s("span",{staticClass:"line-number"},[n._v("175")]),s("br"),s("span",{staticClass:"line-number"},[n._v("176")]),s("br"),s("span",{staticClass:"line-number"},[n._v("177")]),s("br"),s("span",{staticClass:"line-number"},[n._v("178")]),s("br"),s("span",{staticClass:"line-number"},[n._v("179")]),s("br"),s("span",{staticClass:"line-number"},[n._v("180")]),s("br"),s("span",{staticClass:"line-number"},[n._v("181")]),s("br"),s("span",{staticClass:"line-number"},[n._v("182")]),s("br"),s("span",{staticClass:"line-number"},[n._v("183")]),s("br"),s("span",{staticClass:"line-number"},[n._v("184")]),s("br"),s("span",{staticClass:"line-number"},[n._v("185")]),s("br"),s("span",{staticClass:"line-number"},[n._v("186")]),s("br"),s("span",{staticClass:"line-number"},[n._v("187")]),s("br"),s("span",{staticClass:"line-number"},[n._v("188")]),s("br"),s("span",{staticClass:"line-number"},[n._v("189")]),s("br"),s("span",{staticClass:"line-number"},[n._v("190")]),s("br"),s("span",{staticClass:"line-number"},[n._v("191")]),s("br"),s("span",{staticClass:"line-number"},[n._v("192")]),s("br"),s("span",{staticClass:"line-number"},[n._v("193")]),s("br"),s("span",{staticClass:"line-number"},[n._v("194")]),s("br"),s("span",{staticClass:"line-number"},[n._v("195")]),s("br"),s("span",{staticClass:"line-number"},[n._v("196")]),s("br"),s("span",{staticClass:"line-number"},[n._v("197")]),s("br"),s("span",{staticClass:"line-number"},[n._v("198")]),s("br"),s("span",{staticClass:"line-number"},[n._v("199")]),s("br"),s("span",{staticClass:"line-number"},[n._v("200")]),s("br"),s("span",{staticClass:"line-number"},[n._v("201")]),s("br"),s("span",{staticClass:"line-number"},[n._v("202")]),s("br"),s("span",{staticClass:"line-number"},[n._v("203")]),s("br"),s("span",{staticClass:"line-number"},[n._v("204")]),s("br"),s("span",{staticClass:"line-number"},[n._v("205")]),s("br"),s("span",{staticClass:"line-number"},[n._v("206")]),s("br"),s("span",{staticClass:"line-number"},[n._v("207")]),s("br"),s("span",{staticClass:"line-number"},[n._v("208")]),s("br"),s("span",{staticClass:"line-number"},[n._v("209")]),s("br"),s("span",{staticClass:"line-number"},[n._v("210")]),s("br"),s("span",{staticClass:"line-number"},[n._v("211")]),s("br"),s("span",{staticClass:"line-number"},[n._v("212")]),s("br"),s("span",{staticClass:"line-number"},[n._v("213")]),s("br"),s("span",{staticClass:"line-number"},[n._v("214")]),s("br"),s("span",{staticClass:"line-number"},[n._v("215")]),s("br"),s("span",{staticClass:"line-number"},[n._v("216")]),s("br"),s("span",{staticClass:"line-number"},[n._v("217")]),s("br"),s("span",{staticClass:"line-number"},[n._v("218")]),s("br"),s("span",{staticClass:"line-number"},[n._v("219")]),s("br"),s("span",{staticClass:"line-number"},[n._v("220")]),s("br"),s("span",{staticClass:"line-number"},[n._v("221")]),s("br"),s("span",{staticClass:"line-number"},[n._v("222")]),s("br"),s("span",{staticClass:"line-number"},[n._v("223")]),s("br"),s("span",{staticClass:"line-number"},[n._v("224")]),s("br"),s("span",{staticClass:"line-number"},[n._v("225")]),s("br"),s("span",{staticClass:"line-number"},[n._v("226")]),s("br"),s("span",{staticClass:"line-number"},[n._v("227")]),s("br"),s("span",{staticClass:"line-number"},[n._v("228")]),s("br"),s("span",{staticClass:"line-number"},[n._v("229")]),s("br"),s("span",{staticClass:"line-number"},[n._v("230")]),s("br"),s("span",{staticClass:"line-number"},[n._v("231")]),s("br"),s("span",{staticClass:"line-number"},[n._v("232")]),s("br"),s("span",{staticClass:"line-number"},[n._v("233")]),s("br"),s("span",{staticClass:"line-number"},[n._v("234")]),s("br"),s("span",{staticClass:"line-number"},[n._v("235")]),s("br"),s("span",{staticClass:"line-number"},[n._v("236")]),s("br"),s("span",{staticClass:"line-number"},[n._v("237")]),s("br"),s("span",{staticClass:"line-number"},[n._v("238")]),s("br"),s("span",{staticClass:"line-number"},[n._v("239")]),s("br"),s("span",{staticClass:"line-number"},[n._v("240")]),s("br"),s("span",{staticClass:"line-number"},[n._v("241")]),s("br"),s("span",{staticClass:"line-number"},[n._v("242")]),s("br"),s("span",{staticClass:"line-number"},[n._v("243")]),s("br"),s("span",{staticClass:"line-number"},[n._v("244")]),s("br"),s("span",{staticClass:"line-number"},[n._v("245")]),s("br"),s("span",{staticClass:"line-number"},[n._v("246")]),s("br"),s("span",{staticClass:"line-number"},[n._v("247")]),s("br"),s("span",{staticClass:"line-number"},[n._v("248")]),s("br"),s("span",{staticClass:"line-number"},[n._v("249")]),s("br"),s("span",{staticClass:"line-number"},[n._v("250")]),s("br"),s("span",{staticClass:"line-number"},[n._v("251")]),s("br"),s("span",{staticClass:"line-number"},[n._v("252")]),s("br"),s("span",{staticClass:"line-number"},[n._v("253")]),s("br"),s("span",{staticClass:"line-number"},[n._v("254")]),s("br"),s("span",{staticClass:"line-number"},[n._v("255")]),s("br"),s("span",{staticClass:"line-number"},[n._v("256")]),s("br")])])])}),[],!1,null,null,null);t.default=e.exports}}]);