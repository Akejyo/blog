(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{708:function(n,s,t){"use strict";t.r(s);var a=t(5),i=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("补图联通块数量")]),n._v(" "),t("h1",{attrs:{id:"ex-补图联通块数量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ex-补图联通块数量"}},[n._v("#")]),n._v(" EX.补图联通块数量")]),n._v(" "),t("p",[n._v("https://codeforces.com/gym/388925/problem/H\n无向完全图，给你一些权值为1的边，其余边为0，求最小生成树")]),n._v(" "),t("hr"),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("#include <bits/stdc++.h>\ntemplate<typename T>\ninline void read(T& x) { x = 0; char c = getchar(); while (!isdigit(c))c = getchar(); while (isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); } }\n#define si(a) read(a)\n#define sii(a,b) read(a),read(b)\n#define siii(a,b,c) read(a),read(b),read(c)\n#define fl float\n#define ll long long int\n#define ull unsigned long long int\nusing namespace std;\nconst ll MOD = 1e9 + 7;\nconst int N = 2e5 + 10;\n//int gcd(int a, int b) { return a == 0 ? b : gcd(b % a, a); }\nll gcd(ll a, ll b) { return a == 0 ? b : gcd(b % a, a); }\nint n, d, m;\nint fa[N];\ninline signed gf(int x) { return x == fa[x] ? x : fa[x] = gf(fa[x]); }\n//inline signed gf(int x) { return fa[x] == x ? x : fa[x] = gf(fa[x]); }\nvector<int>e[N];\nvector<int>now;//\nmap<int, int>mp;\nint sz[N];\nint ans = 0;\nvoid solve() {\n\tsii(n, m);\n\tfor (int i = 1; i <= m; i++) {\n\t\tint u, v; sii(u, v);\n\t\te[max(u, v)].push_back(min(u, v));\n\t}\n\tfor (int i = 1; i <= n; i++)fa[i] = i, sz[i] = 1;\n\tfor (int i = 1; i <= n; i++) {\n\t\tmp.clear();\n\t\tfor (auto it : e[i])mp[gf(it)]++;\n\t\tint x, y;\n\t\tfor (int j = 0; j < now.size(); j++) {//遍历所有联通块\n\t\t\tx = gf(i),y = gf(now[j]);\n\t\t\tif (x != y)\n\t\t\t\tif (mp[y] < sz[y])//说明点与该连通块直接有0权边\n\t\t\t\t\tsz[y] += sz[x], fa[x] = y;\n\t\t}\n\t\tif (fa[i] == i)//更新连通块\n\t\t\tnow.push_back(i);\n\t}\n\tfor (int i = 1; i <= n; i++)\n\t\tif (fa[i] == i)ans++;\n\tprintf(\"%d\", ans-1);\n}\nint main() {\n\tint t;\n\t/*si(t);\n\twhile (t--)*/\n\tsolve();\n\treturn 0;\n}\n/*\n\n*/\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);