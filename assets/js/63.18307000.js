(window.webpackJsonp=window.webpackJsonp||[]).push([[63],{730:function(n,s,a){"use strict";a.r(s);var t=a(5),i=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("回文树")]),n._v(" "),a("h1",{attrs:{id:"h-回文串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#h-回文串"}},[n._v("#")]),n._v(" H. 回文串")]),n._v(" "),a("p",[a("strong",[n._v("题意")]),n._v("：对于一个串 s，定义 s 的某个子串的权值为其在原串的出现次数乘以该子串的长度。给定串 s， 求其所有回文子串的最大权值。")]),n._v(" "),a("p",[a("strong",[n._v("分析")]),n._v(": 回文自动机，同时记录回文串的出现次数")]),n._v(" "),a("hr"),n._v(" "),a("h3",{attrs:{id:"回文自动机-回文树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回文自动机-回文树"}},[n._v("#")]),n._v(" 回文自动机/回文树")]),n._v(" "),a("p",[a("strong",[n._v("结构")]),n._v("：像AC自动机一样，我们有一个fail指针用来跳字符树。有两个字符树，0表示回文串长度为偶数的树，1表示回文串长度为奇数的树。每个节点虽然只有一个字符，其表示的其实是一个回文串，比如：0→a→b，a节点表示回文串aa，b表示回文串abba。对于每个节点，它的fail指针指向这个节点表示的回文串的后缀中最长的回文串。特殊的有：0节点fail指针指向1，其他非1、0节点若后缀无回文串指向0，1节点的fail指针不用考虑。")]),n._v(" "),a("p",[a("strong",[n._v("操作")]),n._v("：每次读入一个字符，从上次的后缀回文（用last存一下）跳fail指针直到能构成回文，更新回文树，再对这个节点跳fail指针获得它的fail指针。")]),n._v(" "),a("p",[n._v("跳fail指针：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("int getfail(int x, int now) { while (s[now - len[x] - 1] != s[now])x = fail[x]; return x; }//x是当前fail指针指向的，now是当前处理的节点；返回最长后缀回文\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("搭建当前节点的fail指针：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("fail[q] = tr[getfail(fail[p], i)][s[i]];//tr[][]为回文树\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("p",[n._v("同时，对于该题我们还需要统计一下回文串的出现次数，这里可以直接在每次处理的回文串对应处cnt++，但这样有个小问题，长的回文串可能会包含小的回文串，而此时小的回文串并没有考虑到长的回文串的计数。所以在最后count的时候逆序累加，让每个父节点（小回文串）都能加上所有后代（大回文串），同时更新ans。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("for (int i = tot; i > 0; i--) {//tot是回文树的节点数\n\t\tcnt[fail[i]] += cnt[i];\n\t\tans = max(ans, cnt[i] * len[i]);\n\t}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br")])]),a("hr"),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("#include <bits/stdc++.h>\ntemplate<typename T>\ninline void read(T& x) { x = 0; char c = getchar(); while (!isdigit(c))c = getchar(); while (isdigit(c)) { x = x * 10 + c - '0'; c = getchar(); } }\n#define si(a) read(a)\n#define sii(a,b) read(a),read(b)\n#define siii(a,b,c) read(a),read(b),read(c)\n#define fl float\n#define ll long long int\n#define ull unsigned long long int\nusing namespace std;\nint gcd(int a, int b) { return a == 0 ? b : gcd(b % a, a); }\n//const ll MOD = 924844033;\nconst int N = 2e6 + 10;\nint n, m;\nll ans = 0;\nchar s_[N];\nint p, q, pp = 0;\nint s[N];\nint cnt[N], len[N], tot = 1, tr[N][26], fail[N];\nint getfail(int x, int now) { while (s[now - len[x] - 1] != s[now])x = fail[x]; return x; }//返回最长后缀回文\nvoid start() {//初始化\n\tfor (int i = 1; s_[i]; i++)s[i] = s_[i] - 'a';\n\ts[0] = -1;\n\tlen[0] = 0, len[1] = -1;\n\tfail[0] = 1;\n}\nvoid solve() {\n\tscanf(\"%s\", s_+1);\n\tstart();\n\tint s_len = strlen(s_ + 1);\n\tfor (int i = 1; i<=s_len; i++) {\n\t\tp = getfail(pp, i);//从上一次的后缀回文开始找能回文的地方\n\t\tif (!tr[p][s[i]]) {\n\t\t\tlen[++tot] = len[p] + 2, q = tot;\n\t\t\tfail[q] = tr[getfail(fail[p], i)][s[i]];//搭fail\n\t\t\ttr[p][s[i]] = q;\n\t\t}\n\t\tpp = tr[p][s[i]];\n\t\tcnt[pp]++;\n\t}\n\tfor (int i = tot; i > 0; i--) {\n\t\tcnt[fail[i]] += cnt[i];//逆序累加，所以每个父节点都能加上所有的后代\n\t\tans = max(ans, (ll)(cnt[i]) * (ll)(len[i]));\n\t}\n\tprintf(\"%lld\\n\", ans);\n}\nint main() {\n\tint t;\n\t/*si(t);\n\twhile (t--)*/\n\t\tsolve();\n\treturn 0;\n}\n/*\n\n*/\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);