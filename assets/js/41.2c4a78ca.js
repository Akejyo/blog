(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{703:function(n,s,t){"use strict";t.r(s);var a=t(5),i=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("Stoer-Wagner求无向连通图最小割")]),n._v(" "),t("h1",{attrs:{id:"a-蜘蛛的网"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-蜘蛛的网"}},[n._v("#")]),n._v(" A. 蜘蛛的网")]),n._v(" "),t("p",[t("strong",[n._v("题意")]),n._v("：给定一个无向连通图，求至少要去掉几条边才能使图不连通，即求无向连通图的最小割")]),n._v(" "),t("h3",{attrs:{id:"stoer-wagner-算法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stoer-wagner-算法"}},[n._v("#")]),n._v(" Stoer-Wagner 算法")]),n._v(" "),t("p",[t("strong",[n._v("关于算法的证明")]),n._v("： "),t("a",{attrs:{href:"https://oi-wiki.org/graph/stoer-wagner/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Stoer-Wagner 算法 - OI Wiki (oi-wiki.org)"),t("OutboundLink")],1)]),n._v(" "),t("p",[t("strong",[n._v("算法流程")]),n._v(":")]),n._v(" "),t("ul",[t("li",[n._v("在图"),t("strong",[n._v("G")]),n._v("中确定一点"),t("strong",[n._v("S")]),n._v("，每次把"),t("strong",[n._v("S")]),n._v("的邻居中边权最大的那个邻居与"),t("strong",[n._v("S")]),n._v("合并，更新边和边权。")])]),n._v(" "),t("p",[t("img",{attrs:{src:"C:%5CUsers%5C%E5%BC%A0%E5%B0%91%E7%A6%B9%5CDesktop%5CD372FC388860A6B539F521E36A317FEB.png",alt:"D372FC388860A6B539F521E36A317FEB"}})]),n._v(" "),t("ul",[t("li",[t("p",[t("strong",[n._v("2")]),n._v("作为我们确定的"),t("strong",[n._v("S")]),n._v("，他的邻边里与"),t("strong",[n._v("3")]),n._v("连的边是最大的，所以把"),t("strong",[n._v("3")]),n._v("与"),t("strong",[n._v("2")]),n._v("合并，并把"),t("strong",[n._v("3")]),n._v("的边(蓝色的边)更新。"),t("img",{attrs:{src:"C:%5CUsers%5C%E5%BC%A0%E5%B0%91%E7%A6%B9%5CDesktop%5CE62C67ECE03832036E005F3931E7ED3B.png",alt:"E62C67ECE03832036E005F3931E7ED3B"}})])]),n._v(" "),t("li",[t("p",[n._v("反复这样操作到最后两次，我们需要保存除"),t("strong",[n._v("S")]),n._v("的最后两个点，在该轮操作完成后在原图里把"),t("strong",[n._v("1")]),n._v(","),t("strong",[n._v("5")]),n._v("合并。")])])]),n._v(" "),t("p",[t("img",{attrs:{src:"C:%5CUsers%5C%E5%BC%A0%E5%B0%91%E7%A6%B9%5CDesktop%5CAF768EE0C20189728DCB2EAB06F0D682.png",alt:"AF768EE0C20189728DCB2EAB06F0D682"}})]),n._v(" "),t("ul",[t("li",[n._v("继续操作，用最后留下的边更新"),t("strong",[n._v("ans")]),n._v("。")])]),n._v(" "),t("p",[t("img",{attrs:{src:"C:%5CUsers%5C%E5%BC%A0%E5%B0%91%E7%A6%B9%5CDesktop%5C4654D2319DE6CC8A025A3FB756CD8945.png",alt:"4654D2319DE6CC8A025A3FB756CD8945"}})]),n._v(" "),t("ul",[t("li",[n._v("在原图里合并"),t("strong",[n._v("1")]),n._v("、"),t("strong",[n._v("5")]),n._v("，继续上述操作直到原图无法操作，每轮操作都能更新一下ans。")])]),n._v(" "),t("p",[t("img",{attrs:{src:"C:%5CUsers%5C%E5%BC%A0%E5%B0%91%E7%A6%B9%5CDesktop%5C403FC4C063995E482C411C9E901080D2.png",alt:"403FC4C063995E482C411C9E901080D2"}})]),n._v(" "),t("hr"),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#include <stdio.h>\n#include <stdlib.h>\n#include <vector>\n#include <set>\n#include <map>\n#include <string>\n#include <stack>\n#include <malloc.h>\n#include <string.h>\n#include <math.h>\n#include <algorithm>\n#define si(a) scanf("%d",&a)\n#define sii(a,b) scanf("%d%d",&a,&b)\n#define siii(a,b,c) scanf("%d%d%d",&a,&b,&c)\n#define fl float\n#define ll long long int\n#define ull unsigned long long int\nusing namespace std;\nint gcd(int a, int b) { return a == 0 ? b : gcd(b % a, a); }\nint mmm(int a, int b) { if (a < b) return a; else return b; }\nint bbb(int a, int b) { if (a > b) return a; else return b; }\nint jd(int a) { return a < 0 ? (a * -1) : a; }\nint sp[1010][1010];\nint w[1010];\nint vis[1010];\nint mer[1010];//是否已被合并\nint n;\nint x, y;\nint merge() {\n\tint i;\n\tmemset(vis, 0, sizeof(vis));\n\tmemset(w, 0, sizeof(w));\n\tint an = 1e9;\n\tx = 0, y = 0;\n\tint flag = 0;\n\twhile (1) {\n\t\tint M = -1, M_dex = 0;\n\t\tfor (i = 1; i <= n; i++) {\n\t\t\tif (!vis[i] && !mer[i] && w[i] > M) {\n\t\t\t\tM = w[i];\n\t\t\t\tM_dex = i;\n\t\t\t}\n\t\t}\n\t\tvis[M_dex] = 1;\n\t\tif (M_dex == 0) {\n\t\t\tif (flag>1)\n\t\t\t\treturn an;\n\t\t\telse\n\t\t\t\treturn 1e9;\n\t\t}//结束，此时an为最后一个没被合并的\n\t\tan = M;\n\t\tx = y, y = M_dex;//更新一下，在当前函数结束后用来合并原数组\n\t\tfor (i = 1; i <= n; i++)\n\t\t\tif (!vis[i] && !mer[i])\n\t\t\t\tw[i] += sp[i][M_dex];//合并合并合并\n\t\tflag++;\n\t}\n}\nvoid solve() {\n\tint i, j;\n\tint m;\n\tsii(n, m);\n\tfor (i = 0; i < m; i++) {\n\t\tint t1, t2;\n\t\tsii(t1, t2);\n\t\tsp[t1][t2]++;\n\t\tsp[t2][t1]++;\n\t}\n\tint tem = n - 1;\n\tint ans = 1e9;\n\twhile (tem--) {\n\t\tans = mmm(ans, merge());\n\t\tmer[y] = 1;\n\t\tfor (i = 1; i <= n; i++) {//合并原数组\n\t\t\tif (!mer[i]) {\n\t\t\t\tsp[i][x] += sp[i][y];\n\t\t\t\tsp[x][i] += sp[y][i];\n\t\t\t}\n\t\t}\n\t}\n\tprintf("%d", ans);\n}\nint main() {\n\tint t;\n\t/*si(t);\n\twhile (t--)*/\n\tsolve();\n\treturn 0;\n}\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br"),t("span",{staticClass:"line-number"},[n._v("62")]),t("br"),t("span",{staticClass:"line-number"},[n._v("63")]),t("br"),t("span",{staticClass:"line-number"},[n._v("64")]),t("br"),t("span",{staticClass:"line-number"},[n._v("65")]),t("br"),t("span",{staticClass:"line-number"},[n._v("66")]),t("br"),t("span",{staticClass:"line-number"},[n._v("67")]),t("br"),t("span",{staticClass:"line-number"},[n._v("68")]),t("br"),t("span",{staticClass:"line-number"},[n._v("69")]),t("br"),t("span",{staticClass:"line-number"},[n._v("70")]),t("br"),t("span",{staticClass:"line-number"},[n._v("71")]),t("br"),t("span",{staticClass:"line-number"},[n._v("72")]),t("br"),t("span",{staticClass:"line-number"},[n._v("73")]),t("br"),t("span",{staticClass:"line-number"},[n._v("74")]),t("br"),t("span",{staticClass:"line-number"},[n._v("75")]),t("br"),t("span",{staticClass:"line-number"},[n._v("76")]),t("br"),t("span",{staticClass:"line-number"},[n._v("77")]),t("br"),t("span",{staticClass:"line-number"},[n._v("78")]),t("br"),t("span",{staticClass:"line-number"},[n._v("79")]),t("br"),t("span",{staticClass:"line-number"},[n._v("80")]),t("br"),t("span",{staticClass:"line-number"},[n._v("81")]),t("br"),t("span",{staticClass:"line-number"},[n._v("82")]),t("br"),t("span",{staticClass:"line-number"},[n._v("83")]),t("br"),t("span",{staticClass:"line-number"},[n._v("84")]),t("br"),t("span",{staticClass:"line-number"},[n._v("85")]),t("br"),t("span",{staticClass:"line-number"},[n._v("86")]),t("br"),t("span",{staticClass:"line-number"},[n._v("87")]),t("br"),t("span",{staticClass:"line-number"},[n._v("88")]),t("br"),t("span",{staticClass:"line-number"},[n._v("89")]),t("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);