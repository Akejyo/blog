(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{723:function(s,t,a){"use strict";a.r(t);var n=a(5),i=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("最小生成树，分治")]),s._v(" "),a("h1",{attrs:{id:"q-建设道路"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#q-建设道路"}},[s._v("#")]),s._v(" Q. 建设道路")]),s._v(" "),a("p",[a("strong",[s._v("题意")]),s._v("：  "),a("strong",[s._v("n")]),s._v("个节点，每个节点都值"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("msub",[a("mi",[s._v("A")]),a("mi",[s._v("i")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("A_i")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.68333em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"0.83333em","vertical-align":"-0.15em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathit"},[s._v("A")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle cramped"},[a("span",{staticClass:"mord mathit"},[s._v("i")])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])])])])]),s._v("，要求在"),a("strong",[s._v("n")]),s._v("个节点中建"),a("strong",[s._v("n-1")]),s._v("条边使图连通，建"),a("strong",[s._v("i "),a("strong",[s._v("到")]),s._v("j")]),s._v("的边的代价为"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")]),a("mi",[s._v("i")]),a("mo",[s._v("−")]),a("mi",[s._v("j")]),a("mi",{attrs:{mathvariant:"normal"}},[s._v("∣")]),a("mo",[s._v("×")]),a("mi",[s._v("D")]),a("mo",[s._v("+")]),a("msub",[a("mi",[s._v("A")]),a("mi",[s._v("i")])],1),a("mo",[s._v("+")]),a("msub",[a("mi",[s._v("A")]),a("mi",[s._v("j")])],1)],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("|i-j|\\times D+A_i+A_j")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1.036108em","vertical-align":"-0.286108em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathrm"},[s._v("∣")]),a("span",{staticClass:"mord mathit"},[s._v("i")]),a("span",{staticClass:"mbin"},[s._v("−")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[s._v("j")]),a("span",{staticClass:"mord mathrm"},[s._v("∣")]),a("span",{staticClass:"mbin"},[s._v("×")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[s._v("D")]),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathit"},[s._v("A")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle cramped"},[a("span",{staticClass:"mord mathit"},[s._v("i")])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathit"},[s._v("A")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle cramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[s._v("j")])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])])])])]),s._v("。")]),s._v(" "),a("p",[s._v("求建边的最小代价总和。")]),s._v(" "),a("p",[s._v("因为是完全图，直接建图跑最小生成树会超时/超内存。为了减少边数，可以采用分治的方法")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("将所有点分成两部分，只考虑跨两部分的建边。设左半部分为"),a("strong",[s._v("i")]),s._v(",右半部分为"),a("strong",[s._v("j")]),s._v("，则i和j建边的代价即为"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mo",[s._v("(")]),a("msub",[a("mi",[s._v("A")]),a("mi",[s._v("i")])],1),a("mo",[s._v("+")]),a("mi",[s._v("i")]),a("mo",[s._v("∗")]),a("mi",[s._v("D")]),a("mo",[s._v(")")]),a("mo",[s._v("+")]),a("mo",[s._v("(")]),a("msub",[a("mi",[s._v("A")]),a("mi",[s._v("j")])],1),a("mo",[s._v("−")]),a("mi",[s._v("j")]),a("mo",[s._v("∗")]),a("mi",[s._v("D")]),a("mo",[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("(A_i+i*D)+(A_j- j *D)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1.036108em","vertical-align":"-0.286108em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathit"},[s._v("A")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle cramped"},[a("span",{staticClass:"mord mathit"},[s._v("i")])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mord mathit"},[s._v("i")]),a("span",{staticClass:"mbin"},[s._v("∗")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[s._v("D")]),a("span",{staticClass:"mclose"},[s._v(")")]),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathit"},[s._v("A")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle cramped"},[a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[s._v("j")])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mbin"},[s._v("−")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.05724em"}},[s._v("j")]),a("span",{staticClass:"mbin"},[s._v("∗")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[s._v("D")]),a("span",{staticClass:"mclose"},[s._v(")")])])])])])]),s._v(" "),a("li",[a("p",[s._v("对与左半部分，找出"),a("span",{staticClass:"katex"},[a("span",{staticClass:"katex-mathml"},[a("math",[a("semantics",[a("mrow",[a("mi",[s._v("m")]),a("mi",[s._v("i")]),a("mi",[s._v("n")]),a("mo",[s._v("(")]),a("msub",[a("mi",[s._v("A")]),a("mi",[s._v("i")])],1),a("mo",[s._v("+")]),a("mi",[s._v("i")]),a("mo",[s._v("∗")]),a("mi",[s._v("D")]),a("mo",[s._v(")")])],1),a("annotation",{attrs:{encoding:"application/x-tex"}},[s._v("min(A_i+i*D)")])],1)],1)],1),a("span",{staticClass:"katex-html",attrs:{"aria-hidden":"true"}},[a("span",{staticClass:"strut",staticStyle:{height:"0.75em"}}),a("span",{staticClass:"strut bottom",staticStyle:{height:"1em","vertical-align":"-0.25em"}}),a("span",{staticClass:"base textstyle uncramped"},[a("span",{staticClass:"mord mathit"},[s._v("m")]),a("span",{staticClass:"mord mathit"},[s._v("i")]),a("span",{staticClass:"mord mathit"},[s._v("n")]),a("span",{staticClass:"mopen"},[s._v("(")]),a("span",{staticClass:"mord"},[a("span",{staticClass:"mord mathit"},[s._v("A")]),a("span",{staticClass:"vlist"},[a("span",{staticStyle:{top:"0.15em","margin-right":"0.05em","margin-left":"0em"}},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),a("span",{staticClass:"reset-textstyle scriptstyle cramped"},[a("span",{staticClass:"mord mathit"},[s._v("i")])])]),a("span",{staticClass:"baseline-fix"},[a("span",{staticClass:"fontsize-ensurer reset-size5 size5"},[a("span",{staticStyle:{"font-size":"0em"}},[s._v("​")])]),s._v("​")])])]),a("span",{staticClass:"mbin"},[s._v("+")]),a("span",{staticClass:"mord mathit"},[s._v("i")]),a("span",{staticClass:"mbin"},[s._v("∗")]),a("span",{staticClass:"mord mathit",staticStyle:{"margin-right":"0.02778em"}},[s._v("D")]),a("span",{staticClass:"mclose"},[s._v(")")])])])]),s._v("对应的"),a("strong",[s._v("i")]),s._v("，右半部分找出"),a("strong",[s._v("j")]),s._v("，将"),a("strong",[s._v("i")]),s._v("和"),a("strong",[s._v("j")]),s._v("与对面的点建边即可。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void add(int tar, int l, int mid, int r, int type) {\n\tif (type) {//将b的mid->r部分连到a的A(找到的最小的那个点)\n\t\tfor (int i = r; i > mid; i--)\n\t\t\te.insert({ tar, i, a[tar] + b[i] });\n\t}\n\telse {//将a的l->mid部分连到b的B(找到的最小的那个点)\n\t\tfor (int i = l; i <= mid; i++)\n\t\t\te.insert({ i,tar,a[i] + b[tar] });\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("每部分是一半一半处理的，即对于"),a("strong",[s._v("l")]),s._v("和"),a("strong",[s._v("r")]),s._v("，左半部分找"),a("strong",[s._v("l")]),s._v("到"),a("strong",[s._v("mid")]),s._v("，右半部分找"),a("strong",[s._v("mid")]),s._v("到"),a("strong",[s._v("r")]),s._v("。继续上述操作，"),a("strong",[s._v("r")]),s._v("更新为"),a("strong",[s._v("mid")]),s._v("或"),a("strong",[s._v("l")]),s._v("更新为"),a("strong",[s._v("mid")]),s._v("+"),a("strong",[s._v("1")]),s._v("(要跑两次)")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("void fz(int l, int r) {//高贵的分治\n\tif (l != r) {\n\t\tint mid = (l + r) / 2;//找中点\n\t\tint A = findm(a, l, mid, 1);//找a部分在l到mid区间的最小\n\t\tint B = findm(b, mid, r, 0);//找b部分在mid到r区间的最小\n\t\tadd(A, l, mid, r, 1);//加边\n\t\tadd(B, l, mid, r, 0);\n\t\tfz(l, mid);//r更新为mid再跑一遍\n\t\tfz(mid + 1, r);//l更新为mid+1再跑一边\n\t}\n}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("建图完成后跑一边"),a("strong",[s._v("Kruskal")]),s._v("得到最小生成树")])])]),s._v(" "),a("hr"),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('#include <bits/stdc++.h>\n#define si(a) scanf("%d",&a)\n#define sii(a,b) scanf("%d%d",&a,&b)\n#define siii(a,b,c) scanf("%d%d%d",&a,&b,&c)\n#define fl float\n#define ll long long int\n#define ull unsigned long long int\nusing namespace std;\nint gcd(int a, int b) { return a == 0 ? b : gcd(b % a, a); }\nint jd(int a) { return a < 0 ? (a * -1) : a; }\nint n, d, m;\nstruct road {//对于点\n\tint u, v;\n\tll w;\n\tbool friend operator < (road a, road b) { return a.w < b.w; }\n};\nbool cmp(road a, road b) { return a.w < b.w; }\nint fa[200010];\nll a[200010], b[200010];\ninline signed gf(int x) { return fa[x] == x ? x : fa[x] = gf(fa[x]); }\nll cost(ll a, int ai, ll b, int bi) { return (ll)jd(ai - bi) * (ll)d + (ll)a + (ll)b; }//计算权重\nll an;\nmultiset<road>e;\nint findm(ll* c, int l, int r, int type) {//找最小的\n\tint ai;\n\tif (type) {//l -> mid\n\t\tai = l;\n\t\tfor (int i = l; i <= r; i++)\n\t\t\tif (c[ai] > c[i])\n\t\t\t\tai = i;\n\t}\n\telse {//mid -> r\n\t\tai = r;\n\t\tfor (int i = r; i > l; i--)\n\t\t\tif (c[ai] > c[i])\n\t\t\t\tai = i;\n\t}\n\treturn ai;\n}\nvoid add(int tar, int l, int mid, int r, int type) {\n\tif (type) {//将b的mid->r部分连到a的A\n\t\tfor (int i = r; i > mid; i--)\n\t\t\te.insert({ tar, i, a[tar] + b[i] });\n\t}\n\telse {\n\t\tfor (int i = l; i <= mid; i++)\n\t\t\te.insert({ i,tar,a[i] + b[tar] });\n\t}\n}\nvoid holyshit(int l, int r) {//高贵的分治\n\tif (l != r) {\n\t\tint mid = (l + r) / 2;\n\t\tint A = findm(a, l, mid, 1);\n\t\tint B = findm(b, mid, r, 0);\n\t\tadd(A, l, mid, r, 1);\n\t\tadd(B, l, mid, r, 0);\n\t\tholyshit(l, mid);\n\t\tholyshit(mid + 1, r);\n\t}\n}\nvoid solve() {\n\tsii(n, d);\n\tfor (int i = 1; i <= n; i++) {\n\t\tfa[i] = i;\n\t\tint tem; si(tem);\n\t\ta[i] = (ll)tem - (ll)d * (ll)i;\n\t\tb[i] = (ll)tem + (ll)d * (ll)i;\n\t}\n\tholyshit(1, n);\n\tfor (auto it : e) {\n\t\tint x, y;\n\t\tif ((x = gf(it.u)) != (y = gf(it.v))) {\n\t\t\tfa[x] = y;\n\t\t\tan += it.w;\n\t\t}\n\t}\n\tprintf("%lld", an);\n}\nint main() {\n\tint t;\n\t/*si(t);\n\twhile (t--)*/\n\tsolve();\n\treturn 0;\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br")])])])}),[],!1,null,null,null);t.default=i.exports}}]);