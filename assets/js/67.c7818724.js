(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{734:function(n,s,t){"use strict";t.r(s);var a=t(5),i=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("p",[n._v("剪枝")]),n._v(" "),t("h1",{attrs:{id:"v-生日蛋糕"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#v-生日蛋糕"}},[n._v("#")]),n._v(" V. 生日蛋糕")]),n._v(" "),t("p",[t("strong",[n._v("题意")]),n._v("：体积n× π的m层蛋糕， 每层都是圆柱体，在下面的蛋糕的半径和高度（都是整数）都要大于在上面的蛋糕，蛋糕的表面积Q=S× π ,对于给定的n和m求蛋糕的最小S(无解输出0)")]),n._v(" "),t("hr"),n._v(" "),t("p",[t("strong",[n._v("搜索剪枝")]),n._v("：考虑到蛋糕的半径和高度都是整数，也就是说m层蛋糕的最小体积是可以计算得到的。dfs扫所有可行的半径和高度，其中半径和高度的max取上一层的半径和高度减一，最小值为m减当前层数+1。")]),n._v(" "),t("p",[n._v("对于剪枝，如果当前的体积加上剩余层数的最小值已经大于n了，说明体积n× π 的蛋糕做不出就退出。每次搜到一个结果就更新ans，如果当前面积加剩余层数的最小面积大于ans就退出。")]),n._v(" "),t("hr"),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('#include <bits/stdc++.h>\ntemplate<typename T>\ninline void read(T& x) { x = 0; char c = getchar(); while (!isdigit(c))c = getchar(); while (isdigit(c)) { x = x * 10 + c - \'0\'; c = getchar(); } }\n#define si(a) read(a)\n#define sii(a,b) read(a),read(b)\n#define siii(a,b,c) read(a),read(b),read(c)\n#define fl float\n#define ll long long int\n#define ull unsigned long long int\nusing namespace std;\nint gcd(int a, int b) { return a == 0 ? b : gcd(b % a, a); }\n//const ll MOD = 924844033;\nconst int N = 2e6 + 10;\n//int n, m;\nint n, m;\nint ans=114514;\nint rest[10010];\nvoid REST() { for (int i = m, j=0; i >= 1; i--) rest[++j] = i * i * (i + 1) * (i + 1) / 4; }\nvoid dfs(int u, int s_pre, int v_pre, int r_last, int h_last, int s_ground) {\n\tint r_max = r_last-1, h_max=h_last-1;\n\tint r_min = 1 + m - u, h_min = r_min;\n\tif (u == m) {\n\t\tif (r_last == 1 || h_last == 1)\n\t\t\treturn;\n\t\tfor (int i = r_max, v = n - v_pre; i >= r_min; i--)\n\t\t\tfor (int j = h_max; j >= h_min; j--)\n\t\t\t\tif (i * i * j == v)\n\t\t\t\t\tans = m == 1 ? min(ans, i * i + s_pre + 2 * i * j) : min(ans, s_ground + s_pre + 2 * i * j);\n\t\treturn;\n\t}\n\tfor(int i = r_max;i>=r_min;i--)\n\t\tfor (int j = h_max; j >= h_min; j--) {\n\t\t\tif (i * i * j + rest[u + 1] + v_pre > n) continue;\n\t\t\tif (u == 1) {\n\t\t\t\tif (i * i + s_pre + 2 * ((n - v_pre) / r_max) >= ans) continue;\n\t\t\t}\n\t\t\telse if(s_ground+s_pre + 2 * ((n - v_pre) / r_max) >= ans)\n\t\t\t\tcontinue;\n\t\t\tif (u == 1) s_ground = i * i;\n\t\t\tdfs(u + 1, s_pre + 2 * i * j, v_pre + i * i * j, i,j, s_ground);\n\t\t}\n}\nvoid solve() {\n\tsii(n, m);\n\tREST();\n\tif (rest[1] > n)\n\t\tprintf("%d", 0);\n\telse {\n\t\tdfs(1, 0, 0, sqrt(n)+10000, sqrt(n)+10000, 114514);\n\t\tif (ans == 114514)\n\t\t\tprintf("%d", 0);\n\t\telse\n\t\t\tprintf("%d", ans);\n\t}\n}\nint main() {\n\tint t;\n\t/*si(t);\n\twhile (t--)*/\n\t\tsolve();\n\treturn 0;\n}\n/*\n\n*/\n')])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br"),t("span",{staticClass:"line-number"},[n._v("20")]),t("br"),t("span",{staticClass:"line-number"},[n._v("21")]),t("br"),t("span",{staticClass:"line-number"},[n._v("22")]),t("br"),t("span",{staticClass:"line-number"},[n._v("23")]),t("br"),t("span",{staticClass:"line-number"},[n._v("24")]),t("br"),t("span",{staticClass:"line-number"},[n._v("25")]),t("br"),t("span",{staticClass:"line-number"},[n._v("26")]),t("br"),t("span",{staticClass:"line-number"},[n._v("27")]),t("br"),t("span",{staticClass:"line-number"},[n._v("28")]),t("br"),t("span",{staticClass:"line-number"},[n._v("29")]),t("br"),t("span",{staticClass:"line-number"},[n._v("30")]),t("br"),t("span",{staticClass:"line-number"},[n._v("31")]),t("br"),t("span",{staticClass:"line-number"},[n._v("32")]),t("br"),t("span",{staticClass:"line-number"},[n._v("33")]),t("br"),t("span",{staticClass:"line-number"},[n._v("34")]),t("br"),t("span",{staticClass:"line-number"},[n._v("35")]),t("br"),t("span",{staticClass:"line-number"},[n._v("36")]),t("br"),t("span",{staticClass:"line-number"},[n._v("37")]),t("br"),t("span",{staticClass:"line-number"},[n._v("38")]),t("br"),t("span",{staticClass:"line-number"},[n._v("39")]),t("br"),t("span",{staticClass:"line-number"},[n._v("40")]),t("br"),t("span",{staticClass:"line-number"},[n._v("41")]),t("br"),t("span",{staticClass:"line-number"},[n._v("42")]),t("br"),t("span",{staticClass:"line-number"},[n._v("43")]),t("br"),t("span",{staticClass:"line-number"},[n._v("44")]),t("br"),t("span",{staticClass:"line-number"},[n._v("45")]),t("br"),t("span",{staticClass:"line-number"},[n._v("46")]),t("br"),t("span",{staticClass:"line-number"},[n._v("47")]),t("br"),t("span",{staticClass:"line-number"},[n._v("48")]),t("br"),t("span",{staticClass:"line-number"},[n._v("49")]),t("br"),t("span",{staticClass:"line-number"},[n._v("50")]),t("br"),t("span",{staticClass:"line-number"},[n._v("51")]),t("br"),t("span",{staticClass:"line-number"},[n._v("52")]),t("br"),t("span",{staticClass:"line-number"},[n._v("53")]),t("br"),t("span",{staticClass:"line-number"},[n._v("54")]),t("br"),t("span",{staticClass:"line-number"},[n._v("55")]),t("br"),t("span",{staticClass:"line-number"},[n._v("56")]),t("br"),t("span",{staticClass:"line-number"},[n._v("57")]),t("br"),t("span",{staticClass:"line-number"},[n._v("58")]),t("br"),t("span",{staticClass:"line-number"},[n._v("59")]),t("br"),t("span",{staticClass:"line-number"},[n._v("60")]),t("br"),t("span",{staticClass:"line-number"},[n._v("61")]),t("br"),t("span",{staticClass:"line-number"},[n._v("62")]),t("br"),t("span",{staticClass:"line-number"},[n._v("63")]),t("br"),t("span",{staticClass:"line-number"},[n._v("64")]),t("br"),t("span",{staticClass:"line-number"},[n._v("65")]),t("br")])])])}),[],!1,null,null,null);s.default=i.exports}}]);